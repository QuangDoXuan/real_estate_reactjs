{"ast":null,"code":"var _jsxFileName = \"/home/quang/code/land-project-react/src/sites/admin/components/account/login.js\";\n//React, redux\nimport React from 'react';\nimport { connect } from 'react-redux'; //UI\n\nimport { toast } from 'react-toastify';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport constants from '../../../../resources/strings'; //provider\n\nimport dataCacheProvider from '../../../../data-access/datacache-provider';\nimport userProvider from '../../../../data-access/user-provider';\nimport './main.css';\nimport './util.css';\nimport axios from 'axios';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      grant_type: 'password' // confirm: ''\n\n    };\n  }\n\n  componentWillMount() {\n    this.checkUserLogin();\n  }\n\n  checkUserLogin() {\n    if (this.props.userApp.currentUser) {\n      this.props.history.push(\"/admin/dashboard\");\n    } else {\n      this.props.history.push(\"/dang-nhap\");\n    }\n  }\n\n  login() {\n    const _this$state = this.state,\n          username = _this$state.username,\n          password = _this$state.password,\n          grant_type = _this$state.grant_type;\n    let body = 'grant_type=password&username=' + username + '&password=' + password;\n    console.log(body);\n    axios.post('https://localhost:44334/token', body, {\n      'Content-Type': 'application/json'\n    }).then(res => {\n      console.log(res);\n\n      switch (res.status) {\n        case 200:\n          let user = res.data;\n          this.props.dispatch({\n            type: constants.action.action_user_login,\n            value: user\n          });\n          dataCacheProvider.save(\"\", constants.key.storage.current_account, user).then(s => {\n            this.props.history.push(\"/admin/dashboard\");\n          });\n          toast.success('Xin chào ' + res.data.userName, {\n            position: toast.POSITION.TOP_RIGHT\n          });\n          break;\n\n        case 400:\n          toast.error('Đăng nhập thất bại, vui lòng kiểm tra lại thông tin', {\n            position: toast.POSITION.TOP_RIGHT\n          });\n          break;\n\n        case 404:\n          toast.error('Đăng nhập thất bại, vui lòng kiểm tra lại thông tin', {\n            position: toast.POSITION.TOP_RIGHT\n          });\n          break;\n\n        case 500:\n          toast.error('Internal Server Error!', {\n            position: toast.POSITION.TOP_RIGHT\n          });\n          break;\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          username = _this$state2.username,\n          password = _this$state2.password,\n          confirm = _this$state2.confirm;\n    return (// <div className=\"wrapper-form-login\">\n      //     <div className=\"login-form\">\n      //         <form>\n      //             <input value={username} onChange={(event) => { this.setState({ username: event.target.value }) }} type=\"text\" placeholder=\"username\" /><br />\n      //             <input value={password} onChange={(event) => { this.setState({ password: event.target.value }) }} type=\"password\" placeholder=\"password\" />\n      //             {/* <input value={confirm} onChange={(event)=>{this.setState({confirm:event.target.value})}}/> */}\n      //         </form>\n      //         <button className=\"btn btn-primary\" onClick={() => this.login()}>Login</button>\n      //     </div>\n      // </div>\n      React.createElement(\"div\", {\n        className: \"limiter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container-login100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrap-login100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login100-form-title\",\n        style: {\n          backgroundImage: 'url(images/bg-01.jpg)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"login100-form-title-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Landber \", React.createElement(\"sub\", {\n        style: {\n          fontWeight: 100,\n          fontSize: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Admin\"))), React.createElement(\"form\", {\n        className: \"login100-form validate-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrap-input100 validate-input m-b-26\",\n        \"data-validate\": \"Username is required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"label-input100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Username\"), React.createElement(\"input\", {\n        value: username,\n        onChange: event => {\n          this.setState({\n            username: event.target.value\n          });\n        },\n        className: \"input100\",\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Enter username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"focus-input100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"wrap-input100 validate-input m-b-18\",\n        \"data-validate\": \"Password is required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"label-input100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        value: password,\n        onChange: event => {\n          this.setState({\n            password: event.target.value\n          });\n        },\n        className: \"input100\",\n        type: \"password\",\n        name: \"pass\",\n        placeholder: \"Enter password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"focus-input100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"flex-sb-m w-full p-b-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"contact100-form-checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"input-checkbox100\",\n        id: \"ckb1\",\n        type: \"checkbox\",\n        name: \"remember-me\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"label-checkbox100\",\n        htmlFor: \"ckb1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Remember me\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        className: \"txt1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Forgot Password?\"))), React.createElement(\"div\", {\n        className: \"container-login100-form-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: () => this.login(),\n        className: \"login100-form-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Login\"))))\n    );\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userApp: state.userApp\n  };\n}\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/home/quang/code/land-project-react/src/sites/admin/components/account/login.js"],"names":["React","connect","toast","ToastContainer","constants","dataCacheProvider","userProvider","axios","Login","Component","constructor","props","state","username","password","grant_type","componentWillMount","checkUserLogin","userApp","currentUser","history","push","login","body","console","log","post","then","res","status","user","data","dispatch","type","action","action_user_login","value","save","key","storage","current_account","s","success","userName","position","POSITION","TOP_RIGHT","error","catch","render","confirm","backgroundImage","fontWeight","fontSize","event","setState","target","mapStateToProps"],"mappings":"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","sourcesContent":["//React, redux\nimport React from 'react'\nimport { connect } from 'react-redux';\n\n//UI\nimport { toast } from 'react-toastify';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport constants from '../../../../resources/strings'\n\n//provider\nimport dataCacheProvider from '../../../../data-access/datacache-provider'\nimport userProvider from '../../../../data-access/user-provider'\n\nimport './main.css'\nimport './util.css' \nimport axios from 'axios';\n\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: '',\n            grant_type: 'password'\n            // confirm: ''\n        }\n    }\n\n    componentWillMount() {\n        this.checkUserLogin()\n    }\n\n    checkUserLogin() {\n        if (this.props.userApp.currentUser) {\n            this.props.history.push(\"/admin/dashboard\");\n        } else {\n            this.props.history.push(\"/dang-nhap\");\n        }\n    }\n\n    login() {\n        const { username, password, grant_type } = this.state;\n        let body = 'grant_type=password&username=' + username + '&password=' + password\n        console.log(body)\n        axios.post('https://localhost:44334/token', body, { 'Content-Type': 'application/json' })\n            .then((res) => {\n                console.log(res)\n                switch (res.status) {\n                    case 200:\n                        let user = res.data\n                        this.props.dispatch({ type: constants.action.action_user_login, value: user })\n                        dataCacheProvider.save(\"\", constants.key.storage.current_account, user).then(s => {\n                            this.props.history.push(\"/admin/dashboard\");\n                        });\n                        toast.success('Xin chào '+ res.data.userName, {\n                            position: toast.POSITION.TOP_RIGHT\n                        });\n                        break;\n                    case 400: \n                        toast.error('Đăng nhập thất bại, vui lòng kiểm tra lại thông tin',{\n                            position:toast.POSITION.TOP_RIGHT\n                        })\n                        break;\n                    case 404: \n                        toast.error('Đăng nhập thất bại, vui lòng kiểm tra lại thông tin',{\n                            position:toast.POSITION.TOP_RIGHT\n                        })\n                        break;\n                    case 500:\n                        toast.error('Internal Server Error!',{\n                            position:toast.POSITION.TOP_RIGHT\n                        })\n                        break;\n                }\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n\n    render() {\n        const { username, password, confirm } = this.state;\n        return (\n\n            // <div className=\"wrapper-form-login\">\n            //     <div className=\"login-form\">\n            //         <form>\n            //             <input value={username} onChange={(event) => { this.setState({ username: event.target.value }) }} type=\"text\" placeholder=\"username\" /><br />\n            //             <input value={password} onChange={(event) => { this.setState({ password: event.target.value }) }} type=\"password\" placeholder=\"password\" />\n            //             {/* <input value={confirm} onChange={(event)=>{this.setState({confirm:event.target.value})}}/> */}\n            //         </form>\n            //         <button className=\"btn btn-primary\" onClick={() => this.login()}>Login</button>\n            //     </div>\n            // </div>\n\n            <div className=\"limiter\">\n            <div className=\"container-login100\">\n              <div className=\"wrap-login100\">\n                <div className=\"login100-form-title\" style={{backgroundImage: 'url(images/bg-01.jpg)'}}>\n                  <span className=\"login100-form-title-1\">\n                    Landber <sub style={{fontWeight:100, fontSize:10}}>Admin</sub>\n                  </span>\n                </div>\n                <form className=\"login100-form validate-form\">\n                  <div className=\"wrap-input100 validate-input m-b-26\" data-validate=\"Username is required\">\n                    <span className=\"label-input100\">Username</span>\n                    <input value={username} onChange={(event) => { this.setState({ username: event.target.value }) }}  className=\"input100\" type=\"text\" name=\"username\" placeholder=\"Enter username\" />\n                    <span className=\"focus-input100\" />\n                  </div>\n                  <div className=\"wrap-input100 validate-input m-b-18\" data-validate=\"Password is required\">\n                    <span className=\"label-input100\">Password</span>\n                    <input  value={password} onChange={(event) => { this.setState({ password: event.target.value }) }}  className=\"input100\" type=\"password\" name=\"pass\" placeholder=\"Enter password\" />\n                    <span className=\"focus-input100\" />\n                  </div>\n                  <div className=\"flex-sb-m w-full p-b-30\">\n                    <div className=\"contact100-form-checkbox\">\n                      <input className=\"input-checkbox100\" id=\"ckb1\" type=\"checkbox\" name=\"remember-me\" />\n                      <label className=\"label-checkbox100\" htmlFor=\"ckb1\">\n                        Remember me\n                      </label>\n                    </div>\n                    <div>\n                      <a href=\"#\" className=\"txt1\">\n                        Forgot Password?\n                      </a>\n                    </div>\n                  </div>\n                  <div className=\"container-login100-form-btn\">\n                   \n                  </div>\n                </form>\n                <button onClick={() => this.login()}  className=\"login100-form-btn\">\n                      Login\n                    </button>\n              </div>\n            </div>\n          </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        userApp: state.userApp\n    };\n}\nexport default connect(mapStateToProps)(Login);"]},"metadata":{},"sourceType":"module"}